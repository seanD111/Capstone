function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 01-Jan-2016 02:56:07.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 13xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 5xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [0;-0.844142979497717;-1.21081776913422;-0.886819053712128;-1.16210753420434;-1.05684900022516;-1.37146408994849;-0.956694854701917;-0.999784878236989;-1.21344081935975;-1.17068800766467;-1.11345946715343;-1.27953649185264];
x1_step1_gain = [0.274276638782586;1.01462712698978;1.01573680922193;1.00394235392105;0.970352125019923;0.913577897687059;0.995085282878269;1.17227537695011;1.11875294933257;1.0599765094963;1.02220244948345;1.00951919315899;1.00813067168395];
x1_step1_ymin = -1;

% Layer 1
b1 = [0.75587208219063506;-4.7239570586022221;-1.0899466259578008;0.59589848594636885;-0.77242054639567659;-0.36530397851311813;-1.0161377034157908;1.4099937799518543;0.90024451726486188];
IW1_1 = [-2.087145590369055 -0.023266195536046079 -0.56803156651294673 1.1805860993197501 1.7944257476984578 -0.67749880276406371 -2.5713371751721303 4.5809335117604775 -3.1665843439415942 1.5821137435237398 -1.5288583229577866 3.4655868912989996 -2.1702054173421121;2.8198858383081853 3.7579631567013321 1.2527631315438079 2.1940116264279741 0.30194250435852887 1.6842936076004269 0.3099868325173416 1.4999847009076919 0.34512723444393378 0.54997831056523039 1.6807872475388019 0.21038291046826127 0.48580847745624756;-0.42988926900295199 2.7318500801713292 -0.56726749152971301 0.68407540982074033 -0.25758578247398117 1.3646785001220652 0.53977713173926689 -0.25054546752791396 0.85793778088328054 -0.031464528052197738 1.1914311447905506 -0.39437025993984587 0.27819937071869905;3.9022337869040551 1.191582345919793 0.54342093267342684 0.23168262338424359 -0.60215180004407576 -0.43376619323065252 -2.3029944231196846 1.6855478452618875 -1.0786998885997272 0.72522906591092196 -1.4787090736422965 1.9401494056171549 -0.013986564462239379;-1.1386501660199921 1.9688248265320076 -0.75992058768253479 0.67826474159092986 -0.034634261843117582 0.20009892405571417 0.30352941327464367 -0.31935260698421658 0.049874795929345073 0.11890449246349369 0.055459978448202343 0.12703362648078423 0.056285464404048836;2.4440830795224953 0.70072952823243018 1.2381869380317949 0.88626359297405843 0.89971603408127976 0.25945209575020078 0.20776131139942192 1.0935029233509925 -0.063706534690265978 0.44990648012081347 -0.1115425035661539 -0.034219546732680149 1.0268778627283504;6.9475057762320223 4.5216215950700418 1.7223934225873578 3.3764038317430791 -4.785136479326134 3.8274913801109429 1.0154830885807764 -1.4021475079106571 3.1038728620435578 2.1885428859748735 -0.70476660493403165 3.7334682909881729 -2.2500138654852333;5.9076360917642665 1.241152497823736 -3.2637925036216675 -1.5754749164113193 0.73759904640388496 1.7590101370723403 -1.1275852800962134 0.03554406861490593 -0.45629177082790157 -0.72865415120797572 -0.72636384994224823 0.76746008520788533 -0.18700034918116676;-4.2913414788024973 1.5781288804075746 -1.6987064020719103 0.59954916529091395 0.19752935470766111 -0.54657240514977734 0.80424717126168377 -0.70859636439620122 0.36174082358345422 0.023656911999324581 0.7014728606180537 0.39352189166865531 0.47843407278286859];

% Layer 2
b2 = [-10.639836650362939;-3.1067913251684924;3.5579213645099972;5.1412315930555152;6.9846542553973823];
LW2_1 = [-1.387774199073101 3.601203318505263 0.29241539647319303 4.6228468640860125 -7.1380990403377389 -2.0563525323261258 1.8296312058459165 5.358511417284558 4.3003627158037121;-0.86710810456522869 2.43199581957691 -4.3868406413429479 -3.1536614088376993 -1.3746957327136706 8.5518810222145483 -0.40624622436277691 -0.58876367260793938 3.3232200587802092;0.26159856188431813 -5.1808991310726098 4.6811422333194805 2.2053407569443104 -0.87263142782632042 -3.0257715726482766 -1.4150354295024865 -5.5354770472853776 -0.97675140656044435;-0.023757845109872593 -2.5416772325341661 -0.58430723588605327 -3.471620507144868 8.3288938831205357 -2.9537212944661069 -0.82634915833249745 3.0296839261681998 -2.4173339284222446;1.6901010840780692 0.48186551228814872 0.83689851832864703 -2.4161913507525403 1.0807996871163499 -2.4430724413143037 -0.036030624196414139 -2.9160031011934824 -0.9213228765786623];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = softmax_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Competitive Soft Transfer Function
function a = softmax_apply(n)
nmax = max(n,[],1);
n = bsxfun(@minus,n,nmax);
numer = exp(n);
denom = sum(numer,1);
denom(denom == 0) = 1;
a = bsxfun(@rdivide,numer,denom);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
