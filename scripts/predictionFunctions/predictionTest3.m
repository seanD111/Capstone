function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 02-Jan-2016 20:23:10.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 13xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [0;-0.918006102872602;-1.40519896281409;-0.886819053712128;-1.25638483749384;-1.05684900022516;-1.40559298895344;-1.15983029078775;-1.4804491978501;-1.21344081935975;-1.17068800766467;-1.11345946715343;-1.27953649185264];
x1_step1_gain = [0.274276638782586;0.966372167670149;0.924472793378271;0.925452889597233;0.893992707100541;0.913577897687059;0.971071313614911;1.04413027394175;0.881690725079722;1.00413718182;1.02220244948345;1.00951919315899;0.931087673186128];
x1_step1_ymin = -1;

% Layer 1
b1 = [-1.2554884807527649;-2.3768181548955898;0.33644962213081753;2.3360755424597688;0.14417792427087747;-1.3392419054605751;-5.9343391853979526;0.21725141390386804;-3.2659010189247684;-1.3474125741826399;2.5647239172434677;1.269305517012139];
IW1_1 = [-0.70032791725544064 0.59169468703249894 -1.5941580363982164 1.5960895712395706 -0.34135208003642353 -1.508664217766952 2.2454002576616126 -1.1451699498891474 -1.5818849915527575 0.12600344756081511 -0.18459903348688275 -1.1001550771478736 0.5273243098630912;-6.4489360512675482 -1.696690782855395 3.0836030303694741 -5.662690609734919 5.6998998087298238 -3.1657195606787933 -0.74160478483813652 0.91995028317712979 -0.80796409620808685 -0.053179959340387765 -0.73301246590035274 1.5510992423040249 -0.05130797747426432;-0.28381245260684929 1.7301930544431294 2.2352746582947729 1.8694421970048241 -0.94415289468255492 -0.92375589017973758 -0.12929867507575454 -0.13968656092006437 -0.5011094778331171 0.60240011590321585 0.22222413058309035 -0.66735636406676502 -0.57303139835685246;6.5017508792395935 1.6882726766191369 -3.1053810808320401 5.7108625997450648 -5.6573529487490379 3.1255281868895062 0.73214465402557571 -0.88094919671566951 0.76866797742792636 0.12943250892948352 0.76357617823792123 -1.621551453631944 0.10705583359089033;11.5529535260142 -2.7050565961056696 -18.703645113297355 -5.6239103065906502 13.213846829564551 10.962687743652726 10.926543914215017 -15.027827819582779 -8.5803583684321563 1.4982184277119304 14.088828931721507 -3.8067575828254423 -1.2928679210094218;1.6140797586765949 0.78364499381710306 1.1985040878484263 0.51580309059480556 0.58122518547580193 1.0395380634515348 -0.091543513533751147 0.90365868529548865 1.106730461263477 0.29114595933097881 0.70359312844667243 0.52698995444508068 0.5187308536334575;-4.0405647683756643 -7.8620272047262105 12.329898725857115 -5.5098546960856911 12.83403082138047 -11.159841158637105 -9.5203161130490948 6.4410336307207059 -5.2118563158985038 6.4205740846011521 2.8035436261105731 -11.258517348904446 7.1577478271197563;9.2457750532300462 10.997608126147485 2.5263469301865906 1.207460496699778 1.3981610806022227 13.233304572637818 -0.8305923439819819 -0.64367512991085518 2.8148424255686688 3.4773902222412554 -2.3207110012873251 -3.0341422467959402 -2.1741669667542767;-0.14782729250650042 2.2139886789482439 -2.3220146546284242 -0.22893304560428976 0.12592393690783241 -1.7685841112001708 3.5872138872171178 -0.66351533437560506 -2.5612151932253191 1.5191624915207276 2.8600653105783191 0.18896418623730737 0.23713973459140902;1.6362345683908828 0.86521266069776415 1.2482617719823281 0.56247003605907997 0.57375930260571251 1.0774540845771121 -0.092823871781736206 0.9116075476763521 1.0939225527396272 0.30446893860950253 0.75903721828602866 0.44450073073760588 0.51424231081155614;-17.87985966546518 10.381755724226206 -10.259632905704064 6.9777411380353263 -6.3403562764658492 2.0949781682569064 1.9312623811261065 2.1359201987045018 -5.7494199696197779 4.0045293815616452 -2.5606536796268333 3.9235234973502457 -2.8708029142557745;0.95384212931107426 -0.62767216411510229 1.7057634608173318 -1.6077105196575379 0.36668484468136808 1.4121829611228078 -2.3407982803860081 0.967139608211949 1.6115966026242365 -0.21625375336053709 -0.041257063464492406 1.1132252215241807 -0.5671287836893949];

% Layer 2
b2 = [-0.040606348400503041;-0.10200650352492191];
LW2_1 = [0.98071695653087343 -1.3174929441494887 -0.031531500762441697 -1.3225181723177857 0.060022077548291787 -0.78467880894427533 -0.084209666556683702 -0.11667261123671314 0.080627056553719309 0.81972514359261361 -0.04443840372628332 1.2014445818168638;5.2553578929197062 -12.040716387683814 -0.37081886460051589 -11.742422637222877 -0.06386608729811373 -8.6031082216520449 0.1140556416215413 -0.13389247309808167 0.52990991661868225 8.64469256191515 0.19928646866071204 5.5127954917343089];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [0.4;0.00137741046831956];
y1_step1_xoffset = [0;0];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
